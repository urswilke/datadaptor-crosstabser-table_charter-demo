[
  {
    "objectID": "datadaptor-crosstabser-table_charter-demo.html",
    "href": "datadaptor-crosstabser-table_charter-demo.html",
    "title": "datadaptor-crosstabser-table_charter-demo",
    "section": "",
    "text": "Note\n\n\n\nPlease be patient! It will take a little while until everything is set up and you can run the code in the interactive cells.1\n\n\nThis interactive demo shows the combined use of the R packages datadaptor & crosstabser, and the javascript table_charter app to tabulate & plot labelled survey data (or any data.frame).\n\nIn Section 2.3 you can change or enter new commands for datadaptor & crosstabser.\nEditing triggers the execution of the code in Section 3 which\n\nprints the calculated crosstabs,\n& recalculates the data input of the table_charter app in Section 4.\n\n\n\nWe’ll first load the R packages.\n\nlibrary(datadaptor)\nlibrary(crosstabser)"
  },
  {
    "objectID": "datadaptor-crosstabser-table_charter-demo.html#introduction",
    "href": "datadaptor-crosstabser-table_charter-demo.html#introduction",
    "title": "datadaptor-crosstabser-table_charter-demo",
    "section": "",
    "text": "Note\n\n\n\nPlease be patient! It will take a little while until everything is set up and you can run the code in the interactive cells.1\n\n\nThis interactive demo shows the combined use of the R packages datadaptor & crosstabser, and the javascript table_charter app to tabulate & plot labelled survey data (or any data.frame).\n\nIn Section 2.3 you can change or enter new commands for datadaptor & crosstabser.\nEditing triggers the execution of the code in Section 3 which\n\nprints the calculated crosstabs,\n& recalculates the data input of the table_charter app in Section 4.\n\n\n\nWe’ll first load the R packages.\n\nlibrary(datadaptor)\nlibrary(crosstabser)"
  },
  {
    "objectID": "datadaptor-crosstabser-table_charter-demo.html#using-datadaptor-crosstabser",
    "href": "datadaptor-crosstabser-table_charter-demo.html#using-datadaptor-crosstabser",
    "title": "datadaptor-crosstabser-table_charter-demo",
    "section": "\n2 Using datadaptor & crosstabser",
    "text": "2 Using datadaptor & crosstabser\n\nimport {createTable, observeTable} from '@parlant/editable-table'\n\n\n\n\n\n\n\n2.1 Survey data\nThe package data set datadaptor::fruit_survey is used as a toy example for our survey data df. In real life, you would typically receive such data in an SPSS .sav file:\n\n\n\n\n\n\n\n\n\n2.2 Modification & tabulation\n\nThe standard usage of datadaptor & crosstabser is with Excel files that can be created with create_mapping() & create_tabula(), respectively.\nIn order to allow you to play around we use the following editable tables, instead of an Excel file.\nPlease refer to this article for a short description of what the commands do.\nIf you edit the tables in Section 2.3, they are automatically translated into the R data.frame list entries of mapping_file in Section 3 and trigger a reactive update of that code cell.\n\n\n2.2.1 Data modification\nThe first 3 tables Variables, Label & Free1 in Section 2.3 show some examples how you can modify the data.\n\n2.2.2 Tabulation\n\nThe table in the sheet Questions in Section 2.3 has the code to generate the tables along the y-axis of the crosstabs.\nPlease refer to this article for further explanation of the arguments used in the column names.\nTo define the columns along the x-axis of the crosstabs, we just need to define a character vector of variable names in df. Each of the variables’ labelled values will correspond to one column in the crosstabs:\n\n\n\n\n\n\n\n\n\n\n2.3 Playground\nHere we simulate an Excel file with 4 sheets in our browser:\n\n\nVariables\nLabel\nFree1\nQuestions\n\n\n\n\nvariables_arr = transpose(Variables_orig)\nvariables_table = createTable(variables_arr, {headerEditable: false, appendRows: true})\nVariables = observeTable(variables_table)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlabel_arr = transpose(Label_orig)\nlabel_table = createTable(label_arr, {headerEditable: false, appendRows: true})\nres_label = observeTable(label_table)\nLabel = res_label.map(\n  ({\n    nv,\n    sum_var_value,\n    ...rest\n  }) =&gt;({\n    nv: Number(nv),\n    sum_var_value: Number(sum_var_value),\n    ...rest\n  })\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFree1_arr = transpose(Free1_orig)\nFree1_table = createTable(Free1_arr, {headerEditable: false, appendRows: true})\nres_Free1 = observeTable(Free1_table)\nFree1 = res_Free1.map(\n  ({\n    A: X1,\n    B: X2,\n    C: X3,\n    D: X4,\n    E: X5,\n  }) =&gt;({\n    X1, \n    X2, \n    X3, \n    X4, \n    X5\n  })\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestions_arr = transpose(Questions_orig)\nQuestions_table = createTable(Questions_arr, {headerEditable: true, appendRows: true})\nQuestions = observeTable(Questions_table)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou can edit the above tables2"
  },
  {
    "objectID": "datadaptor-crosstabser-table_charter-demo.html#sec-calc-ct",
    "href": "datadaptor-crosstabser-table_charter-demo.html#sec-calc-ct",
    "title": "datadaptor-crosstabser-table_charter-demo",
    "section": "\n3 Calculate crosstabs",
    "text": "3 Calculate crosstabs\nIf you have modified the input data above, running the code in the next cell will automatically:\n\nexecute Mapping$modify_data()3; the resulting data will be stored in the dat_mod field\ncall Tabula$calc_qtabs() to calculate the crosstabs.\nreprint()4 the crosstabs to the console\nrecalculate the data input for the table_charter app in Section 4"
  },
  {
    "objectID": "datadaptor-crosstabser-table_charter-demo.html#sec-tab-ch",
    "href": "datadaptor-crosstabser-table_charter-demo.html#sec-tab-ch",
    "title": "datadaptor-crosstabser-table_charter-demo",
    "section": "\n4 table_charter",
    "text": "4 table_charter\nYou can put the app in your document by adding a &lt;table-charter&gt; html tag with the crosstab data from R as its data attribute:"
  },
  {
    "objectID": "datadaptor-crosstabser-table_charter-demo.html#footnotes",
    "href": "datadaptor-crosstabser-table_charter-demo.html#footnotes",
    "title": "datadaptor-crosstabser-table_charter-demo",
    "section": "Footnotes",
    "text": "Footnotes\n\nThis website is built with the quarto-live extension and the webr wasm versions of the R packages from R-universe. If you install the R packages on your PC, the code runs much faster.↩︎\n… and then see how that changes the results in Section 3 & Section 4 after the re-execution/-initialization which should be triggered automatically.↩︎\n… as we pass df as the dat argument of the Tabula constructor the $modify_data() method of its parent class is executed, see here.↩︎\nUnlike this wasm version in your browser, running the crosstabser R package in RStudio will give you a color-formatted print output. The formatting also works in the R console on Linux, but not on Windows.↩︎"
  }
]